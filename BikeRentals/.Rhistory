scale_x_datetime(breaks = date_breaks("2 hours"), labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_color_discrete("") +
ggtitle("\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(readr)
library(scales)
# because of ggplot version, import library(splines) to replace parameter "ce"
library(splines)
setwd("E:/R Workstation/BikeRentals/")
train <- read_csv("input/train.csv")
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
train$day   <- wday(ymd_hms(train$datetime), label=TRUE)
ggplot(train, aes(x=times, y=count, color=day)) +
geom_smooth(se=FALSE, fill=NA, size=2) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(breaks = date_breaks("4 hours"), labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_color_discrete("") +
ggtitle("\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(readr)
library(scales)
# because of ggplot version, import library(splines) to replace parameter "ce"
library(splines)
setwd("E:/R Workstation/BikeRentals/")
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
train$day   <- wday(ymd_hms(train$datetime), label=TRUE)
train <- read_csv("input/train.csv")
ggplot(train, aes(x=times, y=count, color=day)) +
geom_smooth(se=FALSE, fill=NA, size=2) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(breaks = seq.Date(0:0,24:0,by=4), date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_color_discrete("") +
ggtitle("\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(readr)
library(scales)
# because of ggplot version, import library(splines) to replace parameter "ce"
library(splines)
setwd("E:/R Workstation/BikeRentals/")
train <- read_csv("input/train.csv")
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
train$day   <- wday(ymd_hms(train$datetime), label=TRUE)
startTime <- hour(ymd_hms("2011/1/1  0:00:00"))
endTime <- hour(ymd_hms("2011/1/1  23:59:59"))
ggplot(train, aes(x=times, y=count, color=day)) +
geom_smooth(se=FALSE, fill=NA, size=2) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(breaks = seq.Date(startTime, endTime), date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_color_discrete("") +
ggtitle("\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(readr)
library(scales)
# because of ggplot version, import library(splines) to replace parameter "ce"
library(splines)
setwd("E:/R Workstation/BikeRentals/")
train <- read_csv("input/train.csv")
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
train$day   <- wday(ymd_hms(train$datetime), label=TRUE)
startTime <- hour(ymd_hms("2011/1/1  0:00:00"))
endTime <- hour(ymd_hms("2011/1/1  23:59:59"))
ggplot(train, aes(x=times, y=count, color=day)) +
geom_smooth(se=FALSE, fill=NA, size=2) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(breaks = seq(startTime, endTime), date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_color_discrete("") +
ggtitle("\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(readr)
library(scales)
# because of ggplot version, import library(splines) to replace parameter "ce"
library(splines)
setwd("E:/R Workstation/BikeRentals/")
train <- read_csv("input/train.csv")
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
train$hour  <- hour(ymd_hms(train$datetime))
ggplot(train, aes(x=times, y=count, color=day)) +
geom_smooth(se=FALSE, fill=NA, size=2) +
theme_light(base_size=20) +
train$day   <- wday(ymd_hms(train$datetime), label=TRUE)
xlab("Hour of the Day") +
scale_x_datetime(date_minor_breaks = "1 hour", date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_color_discrete("") +
ggtitle("\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(readr)
library(scales)
# because of ggplot version, import library(splines) to replace parameter "ce"
library(splines)
setwd("E:/R Workstation/BikeRentals/")
train <- read_csv("input/train.csv")
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
train$day   <- wday(ymd_hms(train$datetime), label=TRUE)
ggplot(train, aes(x=times, y=count, color=day)) +
geom_smooth(se=FALSE, fill=NA, size=2) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(date_minor_breaks = "1 hours", date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_color_discrete("") +
theme(plot.title=element_text(size=18))
ggtitle("\n") +
library(ggplot2)
library(lubridate)
library(readr)
library(scales)
# because of ggplot version, import library(splines) to replace parameter "ce"
library(splines)
# Tweak these to show something else on the axes
x_axis <- "times"
y_axis <- "count"
color  <- "day"
library(ggplot2)
library(lubridate)
library(readr)
library(scales)
# because of ggplot version, import library(splines) to replace parameter "ce"
library(splines)
# Tweak these to show something else on the axes
x_axis <- "times"
y_axis <- "count"
color  <- "day"
setwd("E:/R Workstation/BikeRentals/")
train <- read_csv("input/train.csv")
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
train$day   <- wday(ymd_hms(train$datetime), label=TRUE)
ggplot(train, aes(x=x_axis, y=y_axis, color=color)) +
geom_smooth(se=FALSE, fill=NA, size=2) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(date_minor_breaks = "1 hours", date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_color_discrete("") +
ggtitle("\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(readr)
library(scales)
# because of ggplot version, import library(splines) to replace parameter "ce"
library(splines)
# Tweak these to show something else on the axes
x_axis <- "times"
y_axis <- "count"
color  <- "day"
setwd("E:/R Workstation/BikeRentals/")
train <- read_csv("input/train.csv")
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
train$day   <- wday(ymd_hms(train$datetime), label=TRUE)
ggplot(train, aes_string(x=x_axis, y=y_axis, color=color)) +
geom_smooth(se=FALSE, fill=NA, size=2) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(date_minor_breaks = "1 hours", date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_color_discrete("") +
ggtitle("\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(readr)
library(scales)
# because of ggplot version, import library(splines) to replace parameter "se"
#library(splines)
# Tweak these to show something else on the axes
x_axis <- "times"
y_axis <- "count"
color  <- "day"
# The competition data is stored in the /input directory
setwd("E:/R Workstation/BikeRentals/")
train <- read_csv("input/train.csv")
# Write some basic stats to the log
cat("Number of training rows ", nrow(train), "\n")
cat("Number of test rows ", nrow(test), "\n")
head(train)
# calculate train$data
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
train$day   <- wday(ymd_hms(train$datetime), label=TRUE)
# ggplot
ggplot(train, aes_string(x=x_axis, y=y_axis, color=color)) +
geom_smooth(se=FALSE, fill=NA, size=2) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(date_minor_breaks = "1 hours", date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_color_discrete("") +
ggtitle("\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(readr)
library(scales)
# because of ggplot version, import library(splines) to replace parameter "se"
#library(splines)
# Tweak these to show something else on the axes
x_axis <- "jitter_times"
y_axis <- "count"
color  <- "day"
# The competition data is stored in the /input directory
setwd("E:/R Workstation/BikeRentals/")
train <- read_csv("input/train.csv")
# Write some basic stats to the log
cat("Number of training rows ", nrow(train), "\n")
cat("Number of test rows ", nrow(test), "\n")
head(train)
# calculate train$data
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
train$jitter_times <- train$times+minutes(round(runif(nrow(train),min=0,max=59)))
train$day   <- wday(ymd_hms(train$datetime), label=TRUE)
# ggplot
ggplot(train, aes_string(x=x_axis, y=y_axis, color=color)) +
geom_smooth(se=FALSE, fill=NA, size=2) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(date_minor_breaks = "1 hours", date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_color_discrete("") +
ggtitle("\n") +
theme(plot.title=element_text(size=18))
help("minute")
library(ggplot2)
library(lubridate)
library(readr)
library(scales)
# because of ggplot version, import library(splines) to replace parameter "se"
#library(splines)
# Tweak these to show something else on the axes
x_axis <- "times"
y_axis <- "count"
color  <- "day"
# The competition data is stored in the /input directory
setwd("E:/R Workstation/BikeRentals/")
train <- read_csv("input/train.csv")
# Write some basic stats to the log
cat("Number of training rows ", nrow(train), "\n")
cat("Number of test rows ", nrow(test), "\n")
head(train)
# calculate train$data
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
train$day   <- wday(ymd_hms(train$datetime), label=TRUE)
# ggplot
ggplot(train, aes_string(x=x_axis, y=y_axis, color=color)) +
geom_smooth(se=FALSE, fill=NA, size=2) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(date_minor_breaks = "1 hours", date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_color_discrete("") +
ggtitle("\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(scales)
# Tweak these to show something else on the axes
x_axis <- "jitter_times"
y_axis <- "count"
color  <- "temp_f"
# The competition data is stored in the /input directory
setwd("E:/R Workstation/BikeRentals/")
train <- read.csv("input/train.csv")
test  <- read.csv("input/test.csv")
# Write some basic stats to the log
cat("Number of training rows ", nrow(train), "\n")
cat("Number of test rows ", nrow(test), "\n")
head(train)
# calculate train$data
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
# avoid linear points' distribution
train$jitter_times <- train$times+minutes(round(runif(nrow(train),min=0,max=59)))
train$day <- wday(ymd_hms(train$datetime), label=TRUE)
train$temp_f <- train$temp*9/5+32
# ggplot
ggplot(train[train$workingday==1,], aes_string(x=x_axis, y=y_axis, color=color)) +
geom_point(position=position_jitter(w=0.0, h=0.4)) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(breaks = date_breaks("4 hours"), labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_colour_gradientn("Temp (°F)", colours=c("#5e4fa2", "#3288bd", "#66c2a5", "#abdda4", "#e6f598", "#fee08b", "#fdae61", "#f46d43", "#d53e4f", "#9e0142")) +
ggtitle("On workdays, most bikes are rented on warm mornings and evenings\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(scales)
# Tweak these to show something else on the axes
x_axis <- "times"
#x_axis <- "jitter_times"
y_axis <- "count"
color  <- "temp_f"
# The competition data is stored in the /input directory
setwd("E:/R Workstation/BikeRentals/")
train <- read.csv("input/train.csv")
test  <- read.csv("input/test.csv")
# Write some basic stats to the log
cat("Number of training rows ", nrow(train), "\n")
cat("Number of test rows ", nrow(test), "\n")
head(train)
# calculate train$data
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
# avoid linear points' distribution
#train$jitter_times <- train$times+minutes(round(runif(nrow(train),min=0,max=59)))
train$day <- wday(ymd_hms(train$datetime), label=TRUE)
train$temp_f <- train$temp*9/5+32
# ggplot
ggplot(train[train$workingday==1,], aes_string(x=x_axis, y=y_axis, color=color)) +
geom_point(position=position_jitter(w=0.0, h=0.4)) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(breaks = date_breaks("4 hours"), labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_colour_gradientn("Temp (°F)", colours=c("#5e4fa2", "#3288bd", "#66c2a5", "#abdda4", "#e6f598", "#fee08b", "#fdae61", "#f46d43", "#d53e4f", "#9e0142")) +
ggtitle("On workdays, most bikes are rented on warm mornings and evenings\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(scales)
# Tweak these to show something else on the axes
#x_axis <- "times"
x_axis <- "jitter_times"
y_axis <- "count"
color  <- "temp_c"
setwd("E:/R Workstation/BikeRentals/")
train <- read.csv("input/train.csv")
# The competition data is stored in the /input directory
test  <- read.csv("input/test.csv")
# Write some basic stats to the log
cat("Number of training rows ", nrow(train), "\n")
cat("Number of test rows ", nrow(test), "\n")
head(train)
# calculate train$data
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
# avoid linear points' distribution
train$jitter_times <- train$times+minutes(round(runif(nrow(train),min=0,max=59)))
train$day <- wday(ymd_hms(train$datetime), label=TRUE)
train$temp_c <- train$atemp
# ggplot
ggplot(train[train$workingday==1,], aes_string(x=x_axis, y=y_axis, color=color)) +
geom_point(position=position_jitter(w=0.0, h=0.4)) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_colour_gradientn("Temp (°C)", colours=c("#5e4fa2", "#3288bd", "#66c2a5", "#abdda4", "#e6f598", "#fee08b", "#fdae61", "#f46d43", "#d53e4f", "#9e0142")) +
ggtitle("Workdays via \"Feeling Like\" Temp\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(scales)
# Tweak these to show something else on the axes
#x_axis <- "times"
x_axis <- "jitter_times"
y_axis <- "count"
color  <- "humidity"
# The competition data is stored in the /input directory
setwd("E:/R Workstation/BikeRentals/")
train <- read.csv("input/train.csv")
test  <- read.csv("input/test.csv")
# Write some basic stats to the log
cat("Number of training rows ", nrow(train), "\n")
cat("Number of test rows ", nrow(test), "\n")
head(train)
# calculate train$data
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
# avoid linear points' distribution
train$jitter_times <- train$times+minutes(round(runif(nrow(train),min=0,max=59)))
train$day <- wday(ymd_hms(train$datetime), label=TRUE)
train$humidity <- train$humidity
# ggplot
ggplot(train[train$workingday==1,], aes_string(x=x_axis, y=y_axis, color=color)) +
geom_point(position=position_jitter(w=0.0, h=0.4)) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_colour_gradientn("Humidity", colours=c("#5e4fa2", "#3288bd", "#66c2a5", "#abdda4", "#e6f598", "#fee08b", "#fdae61", "#f46d43", "#d53e4f", "#9e0142")) +
ggtitle("Workdays via Humidity\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(scales)
# Tweak these to show something else on the axes
#x_axis <- "times"
x_axis <- "jitter_times"
y_axis <- "count"
color  <- "windspeed"
# The competition data is stored in the /input directory
setwd("E:/R Workstation/BikeRentals/")
train <- read.csv("input/train.csv")
test  <- read.csv("input/test.csv")
# Write some basic stats to the log
cat("Number of training rows ", nrow(train), "\n")
cat("Number of test rows ", nrow(test), "\n")
head(train)
# calculate train$data
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
# avoid linear points' distribution
train$jitter_times <- train$times+minutes(round(runif(nrow(train),min=0,max=59)))
train$day <- wday(ymd_hms(train$datetime), label=TRUE)
train$windspeed <- train$windspeed
ggplot(train[train$workingday==1,], aes_string(x=x_axis, y=y_axis, color=color)) +
geom_point(position=position_jitter(w=0.0, h=0.4)) +
# ggplot
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_colour_gradientn("Humidity", colours=c("#5e4fa2", "#3288bd", "#66c2a5", "#abdda4", "#e6f598", "#fee08b", "#fdae61", "#f46d43", "#d53e4f", "#9e0142")) +
ggtitle("Workdays via Humidity\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(scales)
# Tweak these to show something else on the axes
#x_axis <- "times"
x_axis <- "jitter_times"
y_axis <- "count"
color  <- "windspeed"
# The competition data is stored in the /input directory
setwd("E:/R Workstation/BikeRentals/")
train <- read.csv("input/train.csv")
test  <- read.csv("input/test.csv")
# Write some basic stats to the log
cat("Number of training rows ", nrow(train), "\n")
cat("Number of test rows ", nrow(test), "\n")
head(train)
# calculate train$data
train$hour  <- hour(ymd_hms(train$datetime))
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
# avoid linear points' distribution
train$jitter_times <- train$times+minutes(round(runif(nrow(train),min=0,max=59)))
train$day <- wday(ymd_hms(train$datetime), label=TRUE)
train$windspeed <- train$windspeed
# ggplot
ggplot(train[train$workingday==1,], aes_string(x=x_axis, y=y_axis, color=color)) +
geom_point(position=position_jitter(w=0.0, h=0.4)) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_colour_gradientn("WindSpeed", colours=c("#5e4fa2", "#3288bd", "#66c2a5", "#abdda4", "#e6f598", "#fee08b", "#fdae61", "#f46d43", "#d53e4f", "#9e0142")) +
ggtitle("Workdays via WindSpeed\n") +
theme(plot.title=element_text(size=18))
library(ggplot2)
library(lubridate)
library(scales)
# Tweak these to show something else on the axes
#x_axis <- "times"
x_axis <- "jitter_times"
y_axis <- "count"
color  <- "weather"
setwd("E:/R Workstation/BikeRentals/")
# The competition data is stored in the /input directory
train <- read.csv("input/train.csv")
test  <- read.csv("input/test.csv")
# Write some basic stats to the log
cat("Number of training rows ", nrow(train), "\n")
cat("Number of test rows ", nrow(test), "\n")
head(train)
# calculate train$data
train$hour  <- hour(ymd_hms(train$datetime))
# avoid linear points' distribution
train$times <- as.POSIXct(strftime(ymd_hms(train$datetime), format="%H:%M:%S"), format="%H:%M:%S")
train$jitter_times <- train$times+minutes(round(runif(nrow(train),min=0,max=59)))
train$day <- wday(ymd_hms(train$datetime), label=TRUE)
train$weather <- train$weather
# ggplot
ggplot(train[train$workingday==1,], aes_string(x=x_axis, y=y_axis, color=color)) +
geom_point(position=position_jitter(w=0.0, h=0.4)) +
theme_light(base_size=20) +
xlab("Hour of the Day") +
scale_x_datetime(date_breaks = "4 hours", labels=date_format("%I:%M %p")) +
ylab("Number of Bike Rentals") +
scale_colour_gradientn("Weather", colours=c("#5e4fa2", "#3288bd", "#66c2a5", "#abdda4", "#e6f598", "#fee08b", "#fdae61", "#f46d43", "#d53e4f", "#9e0142")) +
ggtitle("Workdays via Weather\n") +
theme(plot.title=element_text(size=18))
